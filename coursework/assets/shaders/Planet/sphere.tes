#version 430 core

layout(triangles, equal_spacing, ccw) in;


in dvec3 tcsPosition[];
in dvec3 tcsColor[];
in dvec2 tcsTex[];

out dvec4 tesModelPos;
out dvec4 tesWorldPos;
out dvec3 tesNormal;
out dvec3 tesColor;


uniform dmat4 model;
uniform dmat4 view;
uniform dmat4 proj;
uniform dmat4 invTrans;


void main()
{
	dvec3 p0, p1, p2;
	dvec2 t0, t1, t2;
	dvec4 point;

	p0 = gl_TessCoord.x * tcsPosition[0];
	p1 = gl_TessCoord.y * tcsPosition[1];
	p2 = gl_TessCoord.z * tcsPosition[2];
	
	tesModelPos = dvec4(normalize(p0 + p1 + p2), 1.0);
	tesWorldPos = model * tesModelPos;
	tesNormal   = normalize(invTrans * dvec4(tesModelPos.xyz, 0.0)).xyz;
	gl_Position = vec4(proj * view * tesWorldPos);


	p0 = gl_TessCoord.x * tcsColor[0];
	p1 = gl_TessCoord.y * tcsColor[1];
	p2 = gl_TessCoord.z * tcsColor[2];

	tesColor = p0 + p1 + p2;
}